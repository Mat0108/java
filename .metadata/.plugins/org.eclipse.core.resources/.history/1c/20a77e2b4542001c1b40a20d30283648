import java.awt.EventQueue;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import javax.swing.JLabel;
import javax.swing.JButton;
import java.awt.Font;
import java.awt.Insets;

import  javax.swing.*;
import  java.awt.event.*;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
public class Frame extends JFrame {

	private JPanel contentPane;
	private JComboBox SaisirEquipe1 = new JComboBox();
	private JComboBox SaisirEquipe2 = new JComboBox();
	private JButton btnEnvoyer = new JButton("Envoyer"); 
	
	private JLabel TextChoix = new JLabel("Quelle equipe a marqu\u00E9 ? ");
	private JLabel TextEquipe1 = new JLabel("Equipe 1");
	private JLabel TextEquipe2 = new JLabel("Equipe 2");

	private JLabel Score = new JLabel("0 - 0");

	
	private JButton E1_Essai = new JButton("Essai");
	private JButton E1_Drop = new JButton("Drop");
	private JButton E1_Trans = new JButton("Transformation");
	private JButton E2_Essai = new JButton("Essai");
	private JButton E2_Drop = new JButton("Drop");
	private JButton E2_Trans = new JButton("Transformation");
	
	private Equiperugby Equipe1 = new Equiperugby("","rugby");
	private Equiperugby Equipe2 = new Equiperugby("","rugby");
	private Rencontre rencontre = new Rencontre("d","rugby",80,Equipe1,Equipe2);
	
	private JButton btnStart = new JButton("Lancer la partie");
	private JButton btnEnd = new JButton("Fin de partie");
	
	private JButton btnPause = new JButton("P : 0");
	private JButton btnReprendre = new JButton("P : 1");
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Frame frame = new Frame();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	
	public static ArrayList<String> sql() {
		String url = "jdbc:mysql://localhost:3306/java";
		String login = "root";
		String passwd = "";
		Connection cn = null;
		Statement st = null;
		ResultSet rs = null;
		ArrayList<String> tab = new ArrayList<String>();
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			cn = DriverManager.getConnection(url,login,passwd);
			st = cn.createStatement();
			String sql = "SELECT * FROM `equipe` WHERE 1";
			rs = st.executeQuery(sql);
			while(rs.next()) {
				tab.add(rs.getString("nom"));
			}
			}catch(SQLException e) {e.printStackTrace();
			}catch(ClassNotFoundException e) {e.printStackTrace();
			}
		return tab;
	
	}
	public static ArrayList<String> sql2(Equiperugby equipe1, Equiperugby equipe2) {
		String sqlequipe1 = "SELECT `victoire`, `PP`, `PC`, `pts` FROM `equipe` WHERE `nom` LIKE "+equipe1.getNom();
		String sqlequipe2 = "SELECT `victoire`, `PP`, `PC`, `pts` FROM `equipe` WHERE `nom` LIKE "+equipe2.getNom();
		if (equipe1.getScore() > equipe2.getScore()) {
			String sql = "SELECT * FROM `equipe` WHERE `nom` LIKE "+equipe1.getNom();
		}
		String url = "jdbc:mysql://localhost:3306/java";
		String login = "root";
		String passwd = "";
		Connection cn = null;
		Statement st = null;
		ResultSet rs = null;
		ArrayList<String> tab = new ArrayList<String>();
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			cn = DriverManager.getConnection(url,login,passwd);
			st = cn.createStatement();
			rs = st.executeQuery(sqlequipe1);
			while(rs.next()) {
				tab.add(rs.getString("nom"));
			}
			}catch(SQLException e) {e.printStackTrace();
			}catch(ClassNotFoundException e) {e.printStackTrace();
			}
		return tab;
	
	}
	public Frame() {
		ArrayList<String> liste = sql();
		for (String element : liste) {
			SaisirEquipe1.addItem(element);
			SaisirEquipe2.addItem(element);
			
		}
		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 379, 221);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		//Saisie des noms des equipes
		SaisirEquipe1.setBounds(5, 13, 120, 20);
		contentPane.add(SaisirEquipe1);
		
		SaisirEquipe2.setBounds(231, 13, 120, 20);
		contentPane.add(SaisirEquipe2);
		
		btnEnvoyer.setFont(new Font("Tahoma", Font.PLAIN, 11));
		
		btnEnvoyer.setBounds(135, 12, 86, 23);
		contentPane.add(btnEnvoyer);
		TextChoix.setHorizontalAlignment(SwingConstants.CENTER);
		
		
		//choix de quel equipe à marquer
		TextChoix.setBounds(89, 25, 178, 24);
		contentPane.add(TextChoix);
		TextChoix.setVisible(false);
		TextEquipe1.setHorizontalAlignment(SwingConstants.CENTER);
		
		TextEquipe1.setBounds(10, 44, 105, 23);
		contentPane.add(TextEquipe1);
		TextEquipe1.setVisible(false);
		TextEquipe2.setHorizontalAlignment(SwingConstants.CENTER);
		
		TextEquipe2.setBounds(242, 44, 109, 23);
		contentPane.add(TextEquipe2);
		TextEquipe2.setVisible(false);
		
		
		
		//Gestion score
		Score.setHorizontalAlignment(SwingConstants.CENTER);
		Score.setBounds(145, 48, 67, 14);
		contentPane.add(Score);
		Score.setVisible(false);
		
		
		E1_Essai.setFont(new Font("Tahoma", Font.PLAIN, 11));
		E1_Essai.setBounds(10, 74, 109, 23);
		contentPane.add(E1_Essai);
		
		
		E1_Drop.setFont(new Font("Tahoma", Font.PLAIN, 11));
		E1_Drop.setBounds(10, 108, 109, 23);
		contentPane.add(E1_Drop);
		
		E1_Trans.setFont(new Font("Tahoma", Font.PLAIN, 11));
		E1_Trans.setBounds(10, 142, 109, 23);
		contentPane.add(E1_Trans);
		
		E1_Essai.setVisible(false);
		E1_Drop.setVisible(false);
		E1_Trans.setVisible(false);
		E1_Drop.setEnabled(false);
		E1_Essai.setEnabled(false);
		E1_Trans.setEnabled(false);
		
		E2_Essai.setFont(new Font("Tahoma", Font.PLAIN, 11));
		E2_Essai.setBounds(242, 72, 109, 23);
		contentPane.add(E2_Essai);
		
		E2_Drop.setFont(new Font("Tahoma", Font.PLAIN, 11));
		E2_Drop.setBounds(242, 106, 109, 23);
		contentPane.add(E2_Drop);
		
		E2_Trans.setFont(new Font("Tahoma", Font.PLAIN, 11));
		E2_Trans.setBounds(242, 140, 109, 23);
		contentPane.add(E2_Trans);


		E2_Drop.setVisible(false);
		E2_Essai.setVisible(false);
		E2_Trans.setVisible(false);
		
		E2_Drop.setEnabled(false);
		E2_Essai.setEnabled(false);
		E2_Trans.setEnabled(false);
		
		btnStart.setBounds(110, 0, 136, 23);
		contentPane.add(btnStart);
		btnStart.setVisible(false);
		
		btnEnd.setBounds(110, 0, 136, 23);
		contentPane.add(btnEnd);
		

		btnPause.setBounds(328, 0, 35, 23);
		contentPane.add(btnPause);
		btnPause.setMargin(new Insets(0,0,0,0));
		btnPause.setVisible(false);
		
		btnReprendre.setBounds(328, 0, 35, 23);
		contentPane.add(btnReprendre);
		btnReprendre.setMargin(new Insets(0,0,0,0));
		btnReprendre.setVisible(false);
		btnEnd.setVisible(false);
		ActionListener Action = new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (e.getSource() == btnEnvoyer) {
					
					btnEnvoyer.setVisible(false);
					SaisirEquipe1.setVisible(false);
					SaisirEquipe2.setVisible(false);
					rencontre.getEquipes()[0].setNom(liste.get(SaisirEquipe1.getSelectedIndex()));
					rencontre.getEquipes()[1].setNom(liste.get(SaisirEquipe2.getSelectedIndex()));
					TextEquipe1.setText(rencontre.getEquipes()[0].getNom());
					TextEquipe2.setText(rencontre.getEquipes()[1].getNom());
					TextEquipe1.setVisible(true);
					TextEquipe2.setVisible(true);
					TextChoix.setVisible(true);
					Score.setVisible(true);
					E1_Essai.setVisible(true);
					E1_Drop.setVisible(true);
					E1_Trans.setVisible(true);
					E2_Essai.setVisible(true);
					E2_Drop.setVisible(true);
					E2_Trans.setVisible(true);
					btnStart.setVisible(true);
					rencontre.savejson("d");
					rencontre.savejson("s");
					
				}

				if (e.getSource() == E1_Essai) {Equipe1.unEssai();}
				if (e.getSource() == E1_Drop) {Equipe1.unDrop();}
				if (e.getSource() == E1_Trans) {Equipe1.uneTransformation();}
				if (e.getSource() == E2_Essai) {Equipe2.unEssai();}
				if (e.getSource() == E2_Drop) {Equipe2.unDrop();}
				if (e.getSource() == E2_Trans) {Equipe2.uneTransformation();}
				
				if (e.getSource() == btnStart) {
					rencontre.savejson("r");
					btnStart.setVisible(false);
					btnEnd.setVisible(true);
					E1_Drop.setEnabled(true);
					E1_Essai.setEnabled(true);
					E1_Trans.setEnabled(true);
					E2_Drop.setEnabled(true);
					E2_Essai.setEnabled(true);
					E2_Trans.setEnabled(true);
					btnPause.setVisible(true);
				}
				if (e.getSource() == btnPause) {
					rencontre.savejson("s");
					E1_Drop.setEnabled(false);
					E1_Essai.setEnabled(false);
					E1_Trans.setEnabled(false);
					E2_Drop.setEnabled(false);
					E2_Essai.setEnabled(false);
					E2_Trans.setEnabled(false);
					btnPause.setVisible(false);
					btnReprendre.setVisible(true);
				}
				if (e.getSource() == btnReprendre) {
					rencontre.savejson("r");
					E1_Drop.setEnabled(true);
					E1_Essai.setEnabled(true);
					E1_Trans.setEnabled(true);
					E2_Drop.setEnabled(true);
					E2_Essai.setEnabled(true);
					E2_Trans.setEnabled(true);
					btnPause.setVisible(true);
					btnReprendre.setVisible(false);
				}
				if (e.getSource() == btnEnd) {
					rencontre.savejson("f");
				}
				else {
					Score.setText(String.valueOf(rencontre.getEquipes()[0].getScore())+" - "+String.valueOf(rencontre.getEquipes()[1].getScore()));	
					rencontre.savejson("c");
				}

			}
		};
		btnEnvoyer.addActionListener(Action);
		E1_Essai.addActionListener(Action);
		E1_Drop.addActionListener(Action);
		E1_Trans.addActionListener(Action);
		E2_Essai.addActionListener(Action);
		E2_Drop.addActionListener(Action);
		E2_Trans.addActionListener(Action);
		
		btnStart.addActionListener(Action);
		btnPause.addActionListener(Action);
		btnReprendre.addActionListener(Action);
		btnEnd.addActionListener(Action);
	}
}
